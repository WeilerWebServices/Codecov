{
  "headers": {},
  "body": {
    "project": "badges",
    "project_name": "badges",
    "culprit": "raven.scripts.runner in main",
    "level": "debug",
    "url": "https://app.getsentry.com/xxxxx/badges/group/23897129387/",
    "checksum": "c4a4d06bc314205bb3b6bdb612dde7f1",
    "logger": "root",
    "message": "This is an example Python exception",
    "id": "23897129387",
    "event": {
      "sentry.interfaces.Http": {
        "cookies": {},
        "url": "http://example.com/foo",
        "headers": {
          "Referer": "http://example.com",
          "User-Agent": "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36"
        },
        "env": {},
        "query_string": "",
        "data": {},
        "method": "GET"
      },
      "sentry.interfaces.User": {
        "username": "getsentry",
        "id": "1671",
        "email": "foo@example.com"
      },
      "tags": [
        [
          "foo",
          "bar"
        ],
        [
          "version",
          "1.0"
        ],
        [
          "level",
          "error"
        ],
        [
          "logger",
          "root"
        ],
        [
          "browser",
          "Chrome 28.0"
        ],
        [
          "device",
          "Other"
        ],
        [
          "os",
          "Windows 8"
        ],
        [
          "url",
          "http://example.com/foo"
        ],
        [
          "user_email",
          "foo@example.com"
        ]
      ],
      "sentry.interfaces.Stacktrace": {
        "frames": [
          {
            "function": "build_msg",
            "abs_path": "/home/ubuntu/.virtualenvs/getsentry/src/raven/raven/base.py",
            "pre_context": [
              "                frames = stack",
              "",
              "            data.update({",
              "                'sentry.interfaces.Stacktrace': {",
              "                    'frames': get_stack_info(frames,"
            ],
            "vars": {
              "'frames'": "<generator object iter_stack_frames at 0x107bcc3c0>",
              "'culprit'": null,
              "'event_type'": "'raven.events.Message'",
              "'handler'": "<raven.events.Message object at 0x107bd0890>",
              "'date'": "datetime.datetime(2013, 8, 13, 3, 8, 24, 880386)",
              "'extra'": {
                "'loadavg'": [
                  0.37255859375,
                  0.5341796875,
                  0.62939453125
                ],
                "'user'": "'dcramer'"
              },
              "'v'": {
                "'message'": "u'This is a test message generated using ``raven test``'",
                "'params'": []
              },
              "'stack'": true,
              "'event_id'": "'54a322436e1b47b88e239b78998ae742'",
              "'tags'": null,
              "'time_spent'": null,
              "'self'": "<raven.base.Client object at 0x107bb8210>",
              "'data'": {
                "'sentry.interfaces.Message'": {
                  "'message'": "u'This is a test message generated using ``raven test``'",
                  "'params'": []
                },
                "'message'": "u'This is a test message generated using ``raven test``'"
              },
              "'result'": {
                "'sentry.interfaces.Message'": {
                  "'message'": "u'This is a test message generated using ``raven test``'",
                  "'params'": []
                },
                "'message'": "u'This is a test message generated using ``raven test``'"
              },
              "'kwargs'": {
                "'message'": "'This is a test message generated using ``raven test``'",
                "'level'": 20
              },
              "'k'": "'sentry.interfaces.Message'",
              "'public_key'": null
            },
            "module": "raven.base",
            "filename": "raven/base.py",
            "post_context": [
              "                },",
              "            })",
              "",
              "        if 'sentry.interfaces.Stacktrace' in data:",
              "            if self.include_paths:"
            ],
            "colno": null,
            "in_app": false,
            "data": {},
            "context_line": "                        transformer=self.transform)",
            "lineno": 303
          },
          {
            "function": "capture",
            "abs_path": "/home/ubuntu/.virtualenvs/getsentry/src/raven/raven/base.py",
            "pre_context": [
              "        if not self.is_enabled():",
              "            return",
              "",
              "        data = self.build_msg(",
              "            event_type, data, date, time_spent, extra, stack, tags=tags,"
            ],
            "vars": {
              "'event_type'": "'raven.events.Message'",
              "'date'": null,
              "'extra'": {
                "'loadavg'": [
                  0.37255859375,
                  0.5341796875,
                  0.62939453125
                ],
                "'user'": "'dcramer'"
              },
              "'stack'": true,
              "'tags'": null,
              "'time_spent'": null,
              "'self'": "<raven.base.Client object at 0x107bb8210>",
              "'data'": null,
              "'kwargs'": {
                "'message'": "'This is a test message generated using ``raven test``'",
                "'level'": 20
              }
            },
            "module": "raven.base",
            "filename": "raven/base.py",
            "post_context": [
              "",
              "        self.send(**data)",
              "",
              "        return (data.get('event_id'),)",
              ""
            ],
            "colno": null,
            "in_app": false,
            "data": {},
            "context_line": "            **kwargs)",
            "lineno": 459
          },
          {
            "function": "captureMessage",
            "abs_path": "/home/ubuntu/.virtualenvs/getsentry/src/raven/raven/base.py",
            "pre_context": [
              "        \"\"\"",
              "        Creates an event from ``message``.",
              "",
              "        >>> client.captureMessage('My event just happened!')",
              "        \"\"\""
            ],
            "vars": {
              "'message'": "'This is a test message generated using ``raven test``'",
              "'kwargs'": {
                "'extra'": {
                  "'loadavg'": [
                    0.37255859375,
                    0.5341796875,
                    0.62939453125
                  ],
                  "'user'": "'dcramer'"
                },
                "'stack'": true,
                "'data'": null,
                "'level'": 20,
                "'tags'": null
              },
              "'self'": "<raven.base.Client object at 0x107bb8210>"
            },
            "module": "raven.base",
            "filename": "raven/base.py",
            "post_context": [
              "",
              "    def captureException(self, exc_info=None, **kwargs):",
              "        \"\"\"",
              "        Creates an event from an exception.",
              ""
            ],
            "colno": null,
            "in_app": false,
            "data": {},
            "context_line": "        return self.capture('raven.events.Message', message=message, **kwargs)",
            "lineno": 577
          },
          {
            "function": "send_test_message",
            "abs_path": "/home/ubuntu/.virtualenvs/getsentry/src/raven/raven/scripts/runner.py",
            "pre_context": [
              "        level=logging.INFO,",
              "        stack=True,",
              "        tags=options.get('tags', {}),",
              "        extra={",
              "            'user': get_uid(),"
            ],
            "vars": {
              "'client'": "<raven.base.Client object at 0x107bb8210>",
              "'options'": {
                "'tags'": null,
                "'data'": null
              },
              "'data'": null,
              "'k'": "'secret_key'"
            },
            "module": "raven.scripts.runner",
            "filename": "raven/scripts/runner.py",
            "post_context": [
              "        },",
              "    ))",
              "",
              "    if client.state.did_fail():",
              "        print('error!')"
            ],
            "colno": null,
            "in_app": false,
            "data": {},
            "context_line": "            'loadavg': get_loadavg(),",
            "lineno": 77
          },
          {
            "function": "main",
            "abs_path": "/home/ubuntu/.virtualenvs/getsentry/src/raven/raven/scripts/runner.py",
            "pre_context": [
              "    print(\"Using DSN configuration:\")",
              "    print(\" \", dsn)",
              "    print()",
              "",
              "    client = Client(dsn, include_paths=['raven'])"
            ],
            "vars": {
              "'root'": "<logging.Logger object at 0x107ba5b10>",
              "'parser'": "<optparse.OptionParser instance at 0x107ba3368>",
              "'dsn'": "'https://ebc35f33e151401f9deac549978bda11:f3403f81e12e4c24942d505f086b2cad@app.getsentry.com/1'",
              "'opts'": "<Values at 0x107ba3b00: {'data': None, 'tags': None}>",
              "'client'": "<raven.base.Client object at 0x107bb8210>",
              "'args'": [
                "'test'",
                "'https://ebc35f33e151401f9deac549978bda11:f3403f81e12e4c24942d505f086b2cad@app.getsentry.com/1'"
              ]
            },
            "module": "raven.scripts.runner",
            "filename": "raven/scripts/runner.py",
            "post_context": [],
            "colno": null,
            "in_app": false,
            "data": {},
            "context_line": "    send_test_message(client, opts.__dict__)",
            "lineno": 112
          }
        ]
      },
      "extra": {}
    }
  }
}
